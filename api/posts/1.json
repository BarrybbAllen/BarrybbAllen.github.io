{"total":11,"pageSize":12,"pageCount":1,"data":[{"title":"计算机网络学习笔记2","uid":"50324cd41e6545436b99690f3c71831f","slug":"计算机网络学习笔记2","date":"2023-07-29T11:46:57.000Z","updated":"2023-08-03T04:33:45.173Z","comments":true,"path":"api/articles/计算机网络学习笔记2.json","cover":[],"text":"第四章 网络层4.1 网络层概述 网络层的主要任务是实现网络互连，进而实现数据包在各网络之间的传输 网络层主要解决的问题： 网络层向运输层提供怎样的服务(“可靠传输”还是“不可靠传输”) 网络层寻址问题 路由选择问题 因特网(Internet)是全世界用户数量最多的互联网，它使用...","link":"","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","count":2,"path":"api/tags/计算机网络.json"}],"author":{"name":"Qin Zehao","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"操作系统学习笔记2","uid":"de035ae06e7a658a87102027ae8a8a7e","slug":"操作系统学习笔记2","date":"2023-07-29T11:46:28.000Z","updated":"2023-08-02T12:25:33.079Z","comments":true,"path":"api/articles/操作系统学习笔记2.json","cover":[],"text":"第五章 死锁5.1 死锁基本概念死锁：并发环境下，各进程因为竞争资源造成的互相等待对方手里的资源，导致各进程都阻塞，无法向前推进的现象 除对系统资源的竞争外，进程推进非法和信号量使用不当等情况也会造成死锁 死锁、饥饿和死循环 死锁产生的条件： 互斥条件：争抢必须互斥使用的资源 不...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"操作系统","slug":"操作系统","count":2,"path":"api/tags/操作系统.json"}],"author":{"name":"Qin Zehao","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"操作系统学习笔记","uid":"495c8986559724f8c32aca1912ddb729","slug":"操作系统学习笔记","date":"2023-07-23T05:28:43.000Z","updated":"2023-07-30T05:46:22.731Z","comments":true,"path":"api/articles/操作系统学习笔记.json","cover":[],"text":" 第一章 概述 1.1 操作系统的概念和功能： 是系统资源的管理者(管理整个计算机系统的硬件和软件资源) 向上层(用户和其他软件)提供接口和环境 最接近硬件的一层软件(硬件上的第一层软件，是对硬件系统的首次扩充) 1.2 操作系统的发展历程 1.3 操作系统的四大特征并发： 并发...","link":"","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"操作系统","slug":"操作系统","count":2,"path":"api/tags/操作系统.json"}],"author":{"name":"Qin Zehao","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"计算机网络学习笔记","uid":"857b99bbc17d9cdd5bc19bc9d8890bad","slug":"计算机网络学习笔记","date":"2023-07-11T07:17:04.000Z","updated":"2023-07-29T11:02:23.329Z","comments":true,"path":"api/articles/计算机网络学习笔记.json","cover":[],"text":"第一章 概述1.1 网络、互联网和因特网网络：网络（Network）由若干结点（Node）和连接这些结点的链路（Link）组成。 互联网：多个网络通过路由器互连起来，构成了一个覆盖范围更大的网络，即互联网（互连网）。因此，互联网又称为“网络的网络（Network of Netwo...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","count":2,"path":"api/tags/计算机网络.json"}],"author":{"name":"Qin Zehao","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Linux下Redis的使用","uid":"61cb2404786c8e041ac91f953c81aea7","slug":"Linux下Redis的使用","date":"2023-07-09T09:35:15.000Z","updated":"2023-07-10T15:00:59.620Z","comments":true,"path":"api/articles/Linux下Redis的使用.json","cover":null,"text":"CentOS 7虚拟机下Redis的启动和使用常用命令如下（使用这些命令前要先配置系统服务文件）： 启动Redis： – systemctl start redis 查看Redis运行状态： – systemctl status redis 或 – ps -ef | grep r...","link":"","photos":[],"count_time":{"symbolsCount":511,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"study note","slug":"study-note","count":1,"path":"api/tags/study-note.json"}],"author":{"name":"Qin Zehao","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"LRU缓存算法","uid":"3405a51be28fbdb1c58ecac6d40a5d4d","slug":"LRU缓存算法","date":"2023-07-04T07:30:07.000Z","updated":"2023-07-10T15:02:18.105Z","comments":true,"path":"api/articles/LRU缓存算法.json","cover":null,"text":"LRU缓存 最近在做6.830 Lab2时涉及到了实现BufferPool中的eviction policy，即页面置换算法，简单来说，PageId与Page的映射关系为HashMap&lt;PageId, LinkedNode&gt; bufferPool，LinkedNode...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"project","slug":"project","count":1,"path":"api/tags/project.json"}],"author":{"name":"Qin Zehao","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Leetcode417_水流问题","uid":"4f4fe6709de0267b7f3da59b044be8c2","slug":"Leetcode417-水流问题","date":"2022-12-18T01:44:54.000Z","updated":"2023-07-10T15:01:34.310Z","comments":true,"path":"api/articles/Leetcode417-水流问题.json","cover":null,"text":"题目描述 Leetcode417-太平洋大西洋水流问题 有一个m x n的矩形岛屿，与 太平洋和大西洋 相邻。 “太平洋” 处于大陆的左边界和上边界，而 “大西洋” 处于大陆的右边界和下边界。 这个岛被分割成一个由若干方形单元格组成的网格。给定一个m x n的整数矩阵*heigh...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Leetcode","slug":"Leetcode","count":3,"path":"api/tags/Leetcode.json"}],"author":{"name":"Qin Zehao","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Leetcode934_最短的桥","uid":"0611e9ed1fdeb61defdbe1f2f9a19cf6","slug":"Leetcode934-最短的桥","date":"2022-11-09T08:10:13.000Z","updated":"2023-07-10T15:02:01.287Z","comments":true,"path":"api/articles/Leetcode934-最短的桥.json","cover":null,"text":"题目描述 Leetcode934-最短的桥 给你一个大小为 n x n 的二元矩阵 grid ，其中 1 表示陆地，0 表示水域。 岛是由四面相连的 1 形成的一个最大组，即不会与非组内的任何其他 1 相连。grid 中 恰好存在两座岛 你可以将任意数量的 0 变为 1 ，以使两...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Leetcode","slug":"Leetcode","count":3,"path":"api/tags/Leetcode.json"}],"author":{"name":"Qin Zehao","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Leetcode76_最小覆盖子串","uid":"fb400ec9fdd913dd982407d3be3c8029","slug":"Leetcode76-最小覆盖子串","date":"2022-10-22T12:19:35.000Z","updated":"2023-07-10T15:01:17.670Z","comments":true,"path":"api/articles/Leetcode76-最小覆盖子串.json","cover":null,"text":"题目描述 Leetcode76-最小覆盖子串 给你一个字符串 s 、一个字符串 t 。返回 s 中涵盖 t 所有字符的最小子串。如果 s 中不存在涵盖 t 所有字符的子串，则返回空字符串 “” 。 注意： 对于 t 中重复字符，我们寻找的子字符串中该字符数量必须不少于 t 中该字...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"Leetcode","slug":"Leetcode","count":3,"path":"api/tags/Leetcode.json"}],"author":{"name":"Qin Zehao","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"First Blog","uid":"6e2dd14b73e37cbb59872829cb647f57","slug":"First Blog","date":"2022-10-22T08:55:13.000Z","updated":"2023-07-10T14:59:58.978Z","comments":true,"path":"api/articles/First Blog.json","cover":null,"text":"First Blog建立的初衷是希望能坚持写下去，改掉划水的习惯，能不断变好，单纯记录学习。 ——2022.10.22 ","link":"","photos":[],"count_time":{"symbolsCount":60,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"daily","slug":"daily","count":2,"path":"api/tags/daily.json"}],"author":{"name":"Qin Zehao","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2022-10-22T04:27:25.948Z","updated":"2023-07-10T15:00:29.600Z","comments":true,"path":"api/articles/hello-world.json","cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ...","link":"","photos":[],"count_time":{"symbolsCount":440,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"daily","slug":"daily","count":2,"path":"api/tags/daily.json"}],"author":{"name":"Qin Zehao","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}